# -*- coding: utf-8 -*-
"""calculadora_opcoes.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YqzfupH8Q70ScyqQwD5rxKg_vH9UdjVR
"""

import streamlit as st
import numpy as np
import scipy.stats as si

# Função para calcular o preço de uma opção Call no modelo Black-Scholes
def black_scholes_call(S, K, r, T, v):
    d1 = (np.log(S / K) + (r + 0.5 * v ** 2) * T) / (v * np.sqrt(T))
    d2 = d1 - v * np.sqrt(T)
    call_price = S * si.norm.cdf(d1) - K * np.exp(-r * T) * si.norm.cdf(d2)
    return call_price

# Função para calcular o preço de uma opção Put no modelo Black-Scholes
def black_scholes_put(S, K, r, T, v):
    d1 = (np.log(S / K) + (r + 0.5 * v ** 2) * T) / (v * np.sqrt(T))
    d2 = d1 - v * np.sqrt(T)
    put_price = K * np.exp(-r * T) * si.norm.cdf(-d2) - S * si.norm.cdf(-d1)
    return put_price

# Configuração da interface Streamlit
def main():
    st.title("Calculadora de Opções")
    st.write("Calcule o preço de uma opção usando o modelo Black-Scholes.")

    # Escolha do tipo de opção
    option_type = st.selectbox("Escolha o tipo de opção", ("Call", "Put"))

    # Entradas do usuário
    S = st.number_input("Preço do ativo subjacente (S)", value=100.0, format="%.2f")
    K = st.number_input("Preço de exercício (K)", value=100.0, format="%.2f")
    r = st.number_input("Taxa de juros livre de risco (r)", value=0.05, format="%.2f")
    T = st.number_input("Tempo até o vencimento (T) em anos", value=1.0, format="%.2f")
    v = st.number_input("Volatilidade anualizada (v)", value=0.2, format="%.2f")

    # Botão para calcular
    if st.button("Calcular"):
        if option_type == "Call":
            price = black_scholes_call(S, K, r, T, v)
            st.success(f"O preço da opção Call é: R${price:.2f}")
        elif option_type == "Put":
            price = black_scholes_put(S, K, r, T, v)
            st.success(f"O preço da opção Put é: R${price:.2f}")

# Executa a interface principal
if __name__ == "__main__":
    main()